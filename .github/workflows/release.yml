name: Automated Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3

permissions:
  contents: write
  
jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for changelog
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install PlatformIO
      run: |
        pip install platformio
        pio upgrade
    
    - name: Build firmware
      run: |
        python3 tools/grinder.py build
        
    - name: Prepare release artifacts
      run: |
        mkdir -p release-artifacts
        # Copy firmware binaries (only what users need for BLE OTA)
        find .pio/build -name "firmware.bin" -exec cp {} release-artifacts/ \;
        # Create a firmware package
        cd release-artifacts
        tar -czf firmware-${{ github.ref_name }}.tar.gz *.bin
        cd ..
        
    - name: Prepare release notes
      id: changelog
      run: |
        # Get the tag message (custom release notes)
        TAG_MESSAGE=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
        
        # Create release notes with installation instructions
        cat > release-notes.md << EOF
        $TAG_MESSAGE
        
        ## Installation
        
        1. Download \`firmware.bin\` below
        2. Use the grinder tool to upload: \`python3 tools/grinder.py upload firmware.bin\`
        
        ## Build Information
        - Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        - Commit: ${{ github.sha }}
        - Tag: ${{ github.ref_name }}
        EOF
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat release-notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-artifacts/*.tar.gz
          release-artifacts/*.bin
        body: ${{ steps.changelog.outputs.changelog }}
        draft: ${{ contains(steps.changelog.outputs.changelog, '[DRAFT]') }}
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}