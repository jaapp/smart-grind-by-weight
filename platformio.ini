; Default environment settings
[platformio]
default_envs = waveshare-esp32s3-touch-amoled-164

[env:waveshare-esp32s3-touch-amoled-164]
# Pin to pioarduino fork platform 53.03.11
#platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.11/platform-espressif32.zip
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
board = esp32-s3-devkitc-1
framework = arduino
board_build.mcu = esp32s3
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L
board_build.flash_mode = qio
board_upload.flash_size = 16MB
board_build.arduino.memory_type = qio_opi

build_flags =
    -Iinclude
    -Ofast
    -Wall
    '-D LV_CONF_PATH="${platformio.include_dir}/lv_conf.h"'
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM
    -DLV_LVGL_H_INCLUDE_SIMPLE
    -DNO_GLOBAL_UPDATE     ; Required by esp32-flashz
    -DFZ_NOHTTPCLIENT      ; Disable HTTP client (BLE only)
    
lib_deps = 
    lvgl/lvgl@ # ^9.3.0
    moononournation/GFX Library for Arduino # 1.6.1
    vortigont/esp32-flashz # 1.1.5

extra_scripts = 
    tools/build-scripts/pre_build.py
    tools/build-scripts/post_build.py
    tools/build-scripts/custom_targets.py

build_src_filter = +<*> -<.git/> -<.svn/>

; Custom partition table for delta OTA updates
board_build.partitions = partitions.csv

; Include local components for delta OTA
lib_extra_dirs = components

; Upload via USB settings
upload_speed = 921600
; upload_port = /dev/cu.usbmodem*

; Monitor settings  
monitor_speed = 115200
; monitor_port = /dev/cu.usbmodem*

[env:waveshare-esp32s3-touch-amoled-164-mock]
extends = env:waveshare-esp32s3-touch-amoled-164

build_flags = 
    ${env:waveshare-esp32s3-touch-amoled-164.build_flags}
    -DMOCK_BUILD
    -DDEBUG_ENABLE_LOADCELL_MOCK=1
    -DDEBUG_ENABLE_GRINDER_BACKGROUND_INDICATOR=1

; Suppress Wire library logs to suppress known requestFrom(): i2cWriteReadNonStop returned Error -1
; messages popping while polling the touchscreen controller. We have to poll
; because the touchscreen does not support interrupts.
monitor_filters = esp32_exception_decoder, default, hiding_filter
monitor_options =
    --filter hiding_filter:--regex ".*i2cWriteReadNonStop.*" --invert

